openapi: 3.0.2
info:
  title: Tapis Pods Service
  description: >

    The Pods Service is a web service and distributed computing platform
    providing pods-as-a-service (PaaS). The service 

    implements a message broker and processor model that requests pods,
    alongside a health module to poll for pod

    data, including logs, status, and health. The primary use of this service is
    to have quick to deploy long-lived

    services based on Docker images that are exposed via HTTP or TCP endpoints
    listed by the API.


    **The Pods service provides functionality for two types of pod solutions:**
     * **Templated Pods** for run-as-is popular images. Neo4J is one example, the template manages TCP ports, user creation, and permissions.
     * **Custom Pods** for arbitrary docker images with less functionality. In this case we will expose port 5000 and do nothing else.
  contact:
    name: CIC Support
    email: cicsupport@tacc.utexas.edu
  license:
    name: BSD 3.0
    url: 'https://github.com/tapis-project/pods_service'
  version: '0.30'
paths:
  /pods/snapshots:
    get:
      tags:
        - Snapshots
      summary: get_snapshots
      description: >-
        Get all snapshots in your respective tenant and site that you have READ
        or higher access to.


        Returns a list of snapshots.
      operationId: get_snapshots
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnapshotsResponse'
    post:
      tags:
        - Snapshots
      summary: create_snapshot
      description: |-
        Create a snapshot with inputted information.

        Notes:
        - Author will be given ADMIN level permissions to the snapshot.

        Returns new snapshot object.
      operationId: create_snapshot
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewSnapshot'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnapshotResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  '/pods/snapshots/{snapshot_id}':
    get:
      tags:
        - Snapshots
      summary: get_snapshot
      description: |-
        Get a snapshot.

        Returns retrieved snapshot object.
      operationId: get_snapshot
      parameters:
        - required: true
          schema:
            title: Snapshot Id
          name: snapshot_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnapshotResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    put:
      tags:
        - Snapshots
      summary: update_snapshot
      description: >-
        Update a snapshot.


        Note:

        - Fields that change snapshot source or sink are not modifiable. Please
        recreate your snapshot in that case.


        Returns updated snapshot object.
      operationId: update_snapshot
      parameters:
        - required: true
          schema:
            title: Snapshot Id
          name: snapshot_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSnapshot'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnapshotResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
        - Snapshots
      summary: delete_snapshot
      description: |-
        Delete a snapshot.

        Returns "".
      operationId: delete_snapshot
      parameters:
        - required: true
          schema:
            title: Snapshot Id
          name: snapshot_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteSnapshotResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  '/pods/snapshots/{snapshot_id}/list':
    get:
      tags:
        - Snapshots
      summary: list_snapshot_files
      description: List files in snapshot.
      operationId: list_snapshot_files
      parameters:
        - required: true
          schema:
            title: Snapshot Id
          name: snapshot_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilesListResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  '/pods/snapshots/{snapshot_id}/permissions':
    get:
      tags:
        - Permissions
      summary: get_snapshot_permissions
      description: |-
        Get a snapshots permissions.

        Note:
        - There are 3 levels of permissions, READ, USER, and ADMIN.
        - Permissions are granted/revoked to individual TACC usernames.

        Returns all volue permissions.
      operationId: get_snapshot_permissions
      parameters:
        - required: true
          schema:
            title: Snapshot Id
          name: snapshot_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnapshotPermissionsResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
        - Permissions
      summary: set_snapshot_permission
      description: |-
        Set a permission for a snapshot.

        Returns updated snapshot permissions.
      operationId: set_snapshot_permission
      parameters:
        - required: true
          schema:
            title: Snapshot Id
          name: snapshot_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetPermission'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnapshotPermissionsResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  '/pods/snapshots/{snapshot_id}/permissions/{user}':
    delete:
      tags:
        - Permissions
      summary: delete_snapshot_permission
      description: |-
        Delete a permission from a snapshot.

        Returns updated snapshot permissions.
      operationId: delete_snapshot_permission
      parameters:
        - required: true
          schema:
            title: Snapshot Id
          name: snapshot_id
          in: path
        - required: true
          schema:
            title: User
          name: user
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnapshotPermissionsResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /pods/volumes:
    get:
      tags:
        - Volumes
      summary: get_volumes
      description: >-
        Get all volumes in your respective tenant and site that you have READ or
        higher access to.


        Returns a list of volumes.
      operationId: get_volumes
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumesResponse'
    post:
      tags:
        - Volumes
      summary: create_volume
      description: >-
        Create a volume with inputted information.


        Notes:

        - Author will be given ADMIN level permissions to the volume.

        - status_requested defaults to "ON". So volume will immediately begin
        creation.


        Returns new volume object.
      operationId: create_volume
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewVolume'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumeResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  '/pods/volumes/{volume_id}':
    get:
      tags:
        - Volumes
      summary: get_volume
      description: |-
        Get a volume.

        Returns retrieved volume object.
      operationId: get_volume
      parameters:
        - required: true
          schema:
            title: Volume Id
          name: volume_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumeResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    put:
      tags:
        - Volumes
      summary: update_volume
      description: >-
        Update a volume.


        Note:

        - Fields that change volume source or sink are not modifiable. Please
        recreate your volume in that case.


        Returns updated volume object.
      operationId: update_volume
      parameters:
        - required: true
          schema:
            title: Volume Id
          name: volume_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateVolume'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumeResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
        - Volumes
      summary: delete_volume
      description: |-
        Delete a volume.

        Returns "".
      operationId: delete_volume
      parameters:
        - required: true
          schema:
            title: Volume Id
          name: volume_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteVolumeResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  '/pods/volumes/{volume_id}/list':
    get:
      tags:
        - Volumes
      summary: list_volume_files
      description: List files in volume.
      operationId: list_volume_files
      parameters:
        - required: true
          schema:
            title: Volume Id
          name: volume_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilesListResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  '/pods/volumes/{volume_id}/upload/{path}':
    post:
      tags:
        - Volumes
      summary: upload_to_volume
      description: Upload to volume.
      operationId: upload_to_volume
      parameters:
        - required: true
          schema:
            title: Volume Id
          name: volume_id
          in: path
        - required: true
          schema:
            title: Path
          name: path
          in: path
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Body_upload_to_volume'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilesUploadResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  '/pods/volumes/{volume_id}/permissions':
    get:
      tags:
        - Permissions
      summary: get_volume_permissions
      description: |-
        Get a volumes permissions.

        Note:
        - There are 3 levels of permissions, READ, USER, and ADMIN.
        - Permissions are granted/revoked to individual TACC usernames.

        Returns all volue permissions.
      operationId: get_volume_permissions
      parameters:
        - required: true
          schema:
            title: Volume Id
          name: volume_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumePermissionsResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
        - Permissions
      summary: set_volume_permission
      description: |-
        Set a permission for a volume.

        Returns updated volume permissions.
      operationId: set_volume_permission
      parameters:
        - required: true
          schema:
            title: Volume Id
          name: volume_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetPermission'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumePermissionsResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  '/pods/volumes/{volume_id}/permissions/{user}':
    delete:
      tags:
        - Permissions
      summary: delete_volume_permission
      description: |-
        Delete a permission from a volume.

        Returns updated volume permissions.
      operationId: delete_volume_permission
      parameters:
        - required: true
          schema:
            title: Volume Id
          name: volume_id
          in: path
        - required: true
          schema:
            title: User
          name: user
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VolumePermissionsResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /pods:
    get:
      tags:
        - Pods
      summary: get_pods
      description: >-
        Get all pods in your respective tenant and site that you have READ or
        higher access to.


        Returns a list of pods.
      operationId: get_pods
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PodsResponse'
    post:
      tags:
        - Pods
      summary: create_pod
      description: >-
        Create a pod with inputted information.


        Notes:

        - Author will be given ADMIN level permissions to the pod.

        - status_requested defaults to "ON". So pod will immediately begin
        creation.


        Returns new pod object.
      operationId: create_pod
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewPod'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PodResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  '/pods/{pod_id}':
    get:
      tags:
        - Pods
      summary: get_pod
      description: |-
        Get a pod.

        Returns retrieved pod object.
      operationId: get_pod
      parameters:
        - required: true
          schema:
            title: Pod Id
          name: pod_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PodResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    put:
      tags:
        - Pods
      summary: update_pod
      description: >-
        Update a pod.


        Note:

        - Pod will not be restarted, you must restart the pod for any
        pod-related changes to proliferate.


        Returns updated pod object.
      operationId: update_pod
      parameters:
        - required: true
          schema:
            title: Pod Id
          name: pod_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePod'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PodResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
        - Pods
      summary: delete_pod
      description: |-
        Delete a pod.

        Returns "".
      operationId: delete_pod
      parameters:
        - required: true
          schema:
            title: Pod Id
          name: pod_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeletePodResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  '/pods/{pod_id}/credentials':
    get:
      tags:
        - Credentials
      summary: get_pod_credentials
      description: >-
        Get the credentials created for a pod.


        Note:

        - These credentials are used in the case of templated pods, but for
        custom pods they're not.


        Returns user accessible credentials.
      operationId: get_pod_credentials
      parameters:
        - required: true
          schema:
            title: Pod Id
          name: pod_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PodCredentialsResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  '/pods/{pod_id}/logs':
    get:
      tags:
        - Logs
      summary: get_pod_logs
      description: >-
        Get a pods logs.


        Note:

        - These are only retrieved while pod is running.

        - If a pod is restarted or turned off and then on, the logs will be
        reset.


        Returns pod logs.
      operationId: get_pod_logs
      parameters:
        - required: true
          schema:
            title: Pod Id
          name: pod_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PodLogsResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  '/pods/{pod_id}/permissions':
    get:
      tags:
        - Permissions
      summary: get_pod_permissions
      description: |-
        Get a pods permissions.

        Note:
        - There are 3 levels of permissions, READ, USER, and ADMIN.
        - Permissions are granted/revoked to individual TACC usernames.

        Returns all pod permissions.
      operationId: get_pod_permissions
      parameters:
        - required: true
          schema:
            title: Pod Id
          name: pod_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PodPermissionsResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
        - Permissions
      summary: set_pod_permission
      description: |-
        Set a permission for a pod.

        Returns updated pod permissions.
      operationId: set_pod_permission
      parameters:
        - required: true
          schema:
            title: Pod Id
          name: pod_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetPermission'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PodPermissionsResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  '/pods/{pod_id}/permissions/{user}':
    delete:
      tags:
        - Permissions
      summary: delete_pod_permission
      description: |-
        Delete a permission from a pod.

        Returns updated pod permissions.
      operationId: delete_pod_permission
      parameters:
        - required: true
          schema:
            title: Pod Id
          name: pod_id
          in: path
        - required: true
          schema:
            title: User
          name: user
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PodPermissionsResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  '/pods/{pod_id}/stop':
    get:
      tags:
        - Pods
      summary: stop_pod
      description: >-
        Stop a pod.


        Note:

        - Sets status_requested to OFF. Pod will attempt to get to STOPPED
        status unless start_pod is ran.


        Returns updated pod object.
      operationId: stop_pod
      parameters:
        - required: true
          schema:
            title: Pod Id
          name: pod_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PodResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  '/pods/{pod_id}/start':
    get:
      tags:
        - Pods
      summary: start_pod
      description: |-
        Start a pod.

        Note:
        - Sets status_requested to ON. Pod will attempt to deploy.

        Returns updated pod object.
      operationId: start_pod
      parameters:
        - required: true
          schema:
            title: Pod Id
          name: pod_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PodResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  '/pods/{pod_id}/restart':
    get:
      tags:
        - Pods
      summary: restart_pod
      description: >-
        Restart a pod.


        Note:

        - Sets status_requested to RESTART. If pod status gets to STOPPED,
        status_requested will be flipped to ON. Health should then create new
        pod.


        Returns updated pod object.
      operationId: restart_pod
      parameters:
        - required: true
          schema:
            title: Pod Id
          name: pod_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PodResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /traefik-config:
    get:
      tags:
        - Misc
      summary: traefik_config
      description: >-
        Supplies traefik-config to service. Returns json traefik-config object
        for

        traefik to use with the http provider. Dynamic configs don't work well
        in 

        Kubernetes.
      operationId: traefik_config
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
  /healthcheck:
    get:
      tags:
        - Misc
      summary: healthcheck
      description: |-
        Health check for service. Returns healthy when api is running.
        Should add database health check, should add kubernetes health check
      operationId: healthcheck
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
  '/error-handler/{status}':
    get:
      tags:
        - Misc
      summary: error_handler
      description: Handles all error codes from Traefik.
      operationId: error_handler
      parameters:
        - required: true
          schema:
            title: Status
          name: status
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
components:
  schemas:
    Body_upload_to_volume:
      title: Body_upload_to_volume
      required:
        - file
      type: object
      properties:
        file:
          title: File
          type: string
          format: binary
    CredentialsModel:
      title: CredentialsModel
      required:
        - user_username
        - user_password
      type: object
      properties:
        user_username:
          title: User Username
          type: string
        user_password:
          title: User Password
          type: string
      additionalProperties: false
    DeletePodResponse:
      title: DeletePodResponse
      required:
        - message
        - metadata
        - result
        - status
        - version
      type: object
      properties:
        message:
          title: Message
          type: string
        metadata:
          title: Metadata
          type: object
        result:
          title: Result
          type: string
        status:
          title: Status
          type: string
        version:
          title: Version
          type: string
      additionalProperties: false
    DeleteSnapshotResponse:
      title: DeleteSnapshotResponse
      required:
        - message
        - metadata
        - result
        - status
        - version
      type: object
      properties:
        message:
          title: Message
          type: string
        metadata:
          title: Metadata
          type: object
        result:
          title: Result
          type: string
        status:
          title: Status
          type: string
        version:
          title: Version
          type: string
      additionalProperties: false
    DeleteVolumeResponse:
      title: DeleteVolumeResponse
      required:
        - message
        - metadata
        - result
        - status
        - version
      type: object
      properties:
        message:
          title: Message
          type: string
        metadata:
          title: Metadata
          type: object
        result:
          title: Result
          type: string
        status:
          title: Status
          type: string
        version:
          title: Version
          type: string
      additionalProperties: false
    FileModel:
      title: FileModel
      required:
        - name
        - lastModified
        - nativePermissions
        - size
        - path
        - type
      type: object
      properties:
        name:
          title: Name
          type: string
          description: Name of object.
        lastModified:
          title: Lastmodified
          type: string
          description: Last modified date of object.
        nativePermissions:
          title: Nativepermissions
          type: string
          description: Native permissions of object.
        size:
          title: Size
          type: integer
          description: Size of object in bytes.
        path:
          title: Path
          type: string
          description: Path of object.
        type:
          title: Type
          type: string
          description: Type of object. Either file or dir.
      additionalProperties: false
    FilesListResponse:
      title: FilesListResponse
      required:
        - message
        - metadata
        - result
        - status
        - version
      type: object
      properties:
        message:
          title: Message
          type: string
        metadata:
          title: Metadata
          type: object
        result:
          title: Result
          type: array
          items:
            $ref: '#/components/schemas/FileModel'
        status:
          title: Status
          type: string
        version:
          title: Version
          type: string
      additionalProperties: false
    FilesUploadResponse:
      title: FilesUploadResponse
      required:
        - message
        - metadata
        - result
        - status
        - version
      type: object
      properties:
        message:
          title: Message
          type: string
        metadata:
          title: Metadata
          type: object
        result:
          title: Result
          type: string
        status:
          title: Status
          type: string
        version:
          title: Version
          type: string
      additionalProperties: false
    HTTPValidationError:
      title: HTTPValidationError
      type: object
      properties:
        detail:
          title: Detail
          type: array
          items:
            $ref: '#/components/schemas/ValidationError'
    LogsModel:
      title: LogsModel
      type: object
      properties:
        logs:
          title: Logs
          type: string
          description: 'Logs from kubernetes pods, useful for debugging and reading results.'
          default: ''
      additionalProperties: false
    Networking:
      title: Networking
      type: object
      properties:
        protocol:
          title: Protocol
          type: string
          description: Whether to use http or tcp routing for requests to this pod.
          default: http
        port:
          title: Port
          type: integer
          description: Pod port to expose via networking.url in this networking object.
          default: 5000
        url:
          title: Url
          type: string
          description: >-
            URL used to access the port of the pod defined in this networking
            object.
          default: ''
      additionalProperties: false
    NewPod:
      title: NewPod
      required:
        - pod_id
        - pod_template
      type: object
      properties:
        pod_id:
          title: Pod Id
          type: string
          description: Name of this pod.
        pod_template:
          title: Pod Template
          type: string
          description: >-
            Which pod template to use, or which custom image to run, must be on
            allowlist.
        description:
          title: Description
          type: string
          description: Description of this pod.
          default: ''
        command:
          title: Command
          type: array
          items:
            type: string
          description: Command to run in pod.
        environment_variables:
          title: Environment Variables
          type: object
          description: Environment variables to inject into k8 pod; Only for custom pods.
          default: {}
        data_requests:
          title: Data Requests
          type: array
          items:
            type: string
          description: Requested pod names.
          default: []
        roles_required:
          title: Roles Required
          type: array
          items:
            type: string
          description: Roles required to view this pod.
          default: []
        status_requested:
          title: Status Requested
          type: string
          description: 'Status requested by user, ON or OFF.'
          default: 'ON'
        volume_mounts:
          title: Volume Mounts
          type: object
          additionalProperties:
            $ref: '#/components/schemas/VolumeMount'
          description: >-
            Key: Volume name. Value: List of strs specifying volume
            folders/files to mount in pod
          default: {}
        time_to_stop_default:
          title: Time To Stop Default
          type: integer
          description: >-
            Default time (sec) for pod to run from instance start. -1 for
            unlimited. 12 hour default.
          default: 43200
        time_to_stop_instance:
          title: Time To Stop Instance
          type: integer
          description: >-
            Time (sec) for pod to run from instance start. Reset each time
            instance is started. -1 for unlimited. None uses default.
        networking:
          title: Networking
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Networking'
          description: >-
            Networking information. {'url_suffix': {'protocol': 'http'  'tcp',
            'port': int}/}
          default:
            default:
              protocol: http
              port: 5000
        resources:
          title: Resources
          allOf:
            - $ref: '#/components/schemas/Resources'
          description: Pod resource management
          default: {}
      additionalProperties: false
      description: Object with fields that users are allowed to specify for the Pod class.
    NewSnapshot:
      title: NewSnapshot
      required:
        - snapshot_id
        - source_volume_id
        - source_volume_path
      type: object
      properties:
        snapshot_id:
          title: Snapshot Id
          type: string
          description: Name of this snapshot.
        source_volume_id:
          title: Source Volume Id
          type: string
          description: The volume_id to use as source of snapshot.
        source_volume_path:
          title: Source Volume Path
          type: string
          description: Path in source volume_id to make snapshot of
        destination_path:
          title: Destination Path
          type: string
          description: >-
            Path to copy to. Snapshots of singular files require
            destination_path.
          default: ''
        description:
          title: Description
          type: string
          description: Description of this snapshot.
          default: ''
        size_limit:
          title: Size Limit
          type: integer
          description: >-
            Size in MB to limit snapshot to. We'll start warning if you've gone
            past the limit.
          default: 1024
        cron:
          title: Cron
          type: string
          description: cron bits
          default: ''
        retention_policy:
          title: Retention Policy
          type: string
          description: retention_policy bits
          default: ''
      additionalProperties: false
      description: >-
        Object with fields that users are allowed to specify for the Snapshot
        class.
    NewVolume:
      title: NewVolume
      required:
        - volume_id
      type: object
      properties:
        volume_id:
          title: Volume Id
          type: string
          description: Name of this volume.
        description:
          title: Description
          type: string
          description: Description of this volume.
          default: ''
        size_limit:
          title: Size Limit
          type: integer
          description: >-
            Size in MB to limit volume to. We'll start warning if you've gone
            past the limit.
          default: 1024
      additionalProperties: false
      description: >-
        Object with fields that users are allowed to specify for the Volume
        class.
    PermissionsModel:
      title: PermissionsModel
      type: object
      properties:
        permissions:
          title: Permissions
          type: array
          items:
            type: string
          description: Pod permissions for each user.
          default: []
      additionalProperties: false
    PodCredentialsResponse:
      title: PodCredentialsResponse
      required:
        - message
        - metadata
        - result
        - status
        - version
      type: object
      properties:
        message:
          title: Message
          type: string
        metadata:
          title: Metadata
          type: object
        result:
          $ref: '#/components/schemas/CredentialsModel'
        status:
          title: Status
          type: string
        version:
          title: Version
          type: string
      additionalProperties: false
    PodLogsResponse:
      title: PodLogsResponse
      required:
        - message
        - metadata
        - result
        - status
        - version
      type: object
      properties:
        message:
          title: Message
          type: string
        metadata:
          title: Metadata
          type: object
        result:
          $ref: '#/components/schemas/LogsModel'
        status:
          title: Status
          type: string
        version:
          title: Version
          type: string
      additionalProperties: false
    PodPermissionsResponse:
      title: PodPermissionsResponse
      required:
        - message
        - metadata
        - result
        - status
        - version
      type: object
      properties:
        message:
          title: Message
          type: string
        metadata:
          title: Metadata
          type: object
        result:
          $ref: '#/components/schemas/PermissionsModel'
        status:
          title: Status
          type: string
        version:
          title: Version
          type: string
      additionalProperties: false
    PodResponse:
      title: PodResponse
      required:
        - message
        - metadata
        - result
        - status
        - version
      type: object
      properties:
        message:
          title: Message
          type: string
        metadata:
          title: Metadata
          type: object
        result:
          $ref: '#/components/schemas/PodResponseModel'
        status:
          title: Status
          type: string
        version:
          title: Version
          type: string
      additionalProperties: false
    PodResponseModel:
      title: PodResponseModel
      required:
        - pod_id
        - pod_template
      type: object
      properties:
        pod_id:
          title: Pod Id
          type: string
          description: Name of this pod.
        pod_template:
          title: Pod Template
          type: string
          description: >-
            Which pod template to use, or which custom image to run, must be on
            allowlist.
        description:
          title: Description
          type: string
          description: Description of this pod.
          default: ''
        command:
          title: Command
          type: array
          items:
            type: string
          description: Command to run in pod.
        environment_variables:
          title: Environment Variables
          type: object
          description: Environment variables to inject into k8 pod; Only for custom pods.
          default: {}
        data_requests:
          title: Data Requests
          type: array
          items:
            type: string
          description: Requested pod names.
          default: []
        roles_required:
          title: Roles Required
          type: array
          items:
            type: string
          description: Roles required to view this pod.
          default: []
        status_requested:
          title: Status Requested
          type: string
          description: 'Status requested by user, ON or OFF.'
          default: 'ON'
        volume_mounts:
          title: Volume Mounts
          type: object
          additionalProperties:
            $ref: '#/components/schemas/VolumeMount'
          description: >-
            Key: Volume name. Value: List of strs specifying volume
            folders/files to mount in pod
          default: {}
        time_to_stop_default:
          title: Time To Stop Default
          type: integer
          description: >-
            Default time (sec) for pod to run from instance start. -1 for
            unlimited. 12 hour default.
          default: 43200
        time_to_stop_instance:
          title: Time To Stop Instance
          type: integer
          description: >-
            Time (sec) for pod to run from instance start. Reset each time
            instance is started. -1 for unlimited. None uses default.
        networking:
          title: Networking
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Networking'
          description: >-
            Networking information. {'url_suffix': {'protocol': 'http'  'tcp',
            'port': int}/}
          default:
            default:
              protocol: http
              port: 5000
        resources:
          title: Resources
          allOf:
            - $ref: '#/components/schemas/Resources'
          description: Pod resource management
          default: {}
        time_to_stop_ts:
          title: Time To Stop Ts
          type: string
          description: >-
            Time (UTC) that this pod is scheduled to be stopped. Change with
            time_to_stop_instance.
          format: date-time
        status:
          title: Status
          type: string
          description: Current status of pod.
          default: STOPPED
        status_container:
          title: Status Container
          type: object
          description: Status of container if exists. Gives phase.
          default: {}
        data_attached:
          title: Data Attached
          type: array
          items:
            type: string
          description: Data attached.
          default: []
        roles_inherited:
          title: Roles Inherited
          type: array
          items:
            type: string
          description: Inherited roles required to view this pod
          default: []
        creation_ts:
          title: Creation Ts
          type: string
          description: Time (UTC) that this pod was created.
          format: date-time
        update_ts:
          title: Update Ts
          type: string
          description: Time (UTC) that this pod was updated.
          format: date-time
        start_instance_ts:
          title: Start Instance Ts
          type: string
          description: Time (UdTC) that this pod instance was started.
          format: date-time
      additionalProperties: false
      description: Response object for Pod class.
    PodsResponse:
      title: PodsResponse
      required:
        - message
        - metadata
        - result
        - status
        - version
      type: object
      properties:
        message:
          title: Message
          type: string
        metadata:
          title: Metadata
          type: object
        result:
          title: Result
          type: array
          items:
            $ref: '#/components/schemas/PodResponseModel'
        status:
          title: Status
          type: string
        version:
          title: Version
          type: string
      additionalProperties: false
    Resources:
      title: Resources
      type: object
      properties:
        cpu_request:
          title: Cpu Request
          type: integer
          description: >-
            CPU allocation pod requests at startup. In millicpus (m). 1000 = 1
            cpu.
          default: 250
        cpu_limit:
          title: Cpu Limit
          type: integer
          description: >-
            CPU allocation pod is allowed to use. In millicpus (m). 1000 = 1
            cpu.
          default: 2000
        mem_request:
          title: Mem Request
          type: integer
          description: Memory allocation pod requests at startup. In megabytes (Mi)
          default: 256
        mem_limit:
          title: Mem Limit
          type: integer
          description: Memory allocation pod is allowed to use. In megabytes (Mi)
          default: 3072
      additionalProperties: false
    SetPermission:
      title: SetPermission
      required:
        - user
        - level
      type: object
      properties:
        user:
          title: User
          type: string
          description: User to modify permissions for.
        level:
          title: Level
          type: string
          description: Permission level to give the user.
      additionalProperties: false
      description: >-
        Object with fields that users are allowed to specify for the Volume
        class.
    SnapshotPermissionsResponse:
      title: SnapshotPermissionsResponse
      required:
        - message
        - metadata
        - result
        - status
        - version
      type: object
      properties:
        message:
          title: Message
          type: string
        metadata:
          title: Metadata
          type: object
        result:
          $ref: '#/components/schemas/PermissionsModel'
        status:
          title: Status
          type: string
        version:
          title: Version
          type: string
      additionalProperties: false
    SnapshotResponse:
      title: SnapshotResponse
      required:
        - message
        - metadata
        - result
        - status
        - version
      type: object
      properties:
        message:
          title: Message
          type: string
        metadata:
          title: Metadata
          type: object
        result:
          $ref: '#/components/schemas/SnapshotResponseModel'
        status:
          title: Status
          type: string
        version:
          title: Version
          type: string
      additionalProperties: false
    SnapshotResponseModel:
      title: SnapshotResponseModel
      required:
        - snapshot_id
        - source_volume_id
        - source_volume_path
      type: object
      properties:
        snapshot_id:
          title: Snapshot Id
          type: string
          description: Name of this snapshot.
        source_volume_id:
          title: Source Volume Id
          type: string
          description: The volume_id to use as source of snapshot.
        source_volume_path:
          title: Source Volume Path
          type: string
          description: Path in source volume_id to make snapshot of
        destination_path:
          title: Destination Path
          type: string
          description: >-
            Path to copy to. Snapshots of singular files require
            destination_path.
          default: ''
        description:
          title: Description
          type: string
          description: Description of this snapshot.
          default: ''
        size_limit:
          title: Size Limit
          type: integer
          description: >-
            Size in MB to limit snapshot to. We'll start warning if you've gone
            past the limit.
          default: 1024
        cron:
          title: Cron
          type: string
          description: cron bits
          default: ''
        retention_policy:
          title: Retention Policy
          type: string
          description: retention_policy bits
          default: ''
        size:
          title: Size
          type: integer
          description: Size of snapshot currently in MB
          default: 0
        status:
          title: Status
          type: string
          description: Current status of snapshot.
          default: REQUESTED
        creation_ts:
          title: Creation Ts
          type: string
          description: Time (UTC) that this snapshot was created.
          format: date-time
        update_ts:
          title: Update Ts
          type: string
          description: Time (UTC) that this snapshot was updated.
          format: date-time
      additionalProperties: false
      description: Response object for Snapshot class.
    SnapshotsResponse:
      title: SnapshotsResponse
      required:
        - message
        - metadata
        - result
        - status
        - version
      type: object
      properties:
        message:
          title: Message
          type: string
        metadata:
          title: Metadata
          type: object
        result:
          title: Result
          type: array
          items:
            $ref: '#/components/schemas/SnapshotResponseModel'
        status:
          title: Status
          type: string
        version:
          title: Version
          type: string
      additionalProperties: false
    UpdatePod:
      title: UpdatePod
      type: object
      properties:
        description:
          title: Description
          type: string
          description: Description of this pod.
          default: ''
        command:
          title: Command
          type: array
          items:
            type: string
          description: Command to run in pod.
        environment_variables:
          title: Environment Variables
          type: object
          description: Environment variables to inject into k8 pod; Only for custom pods.
          default: {}
        data_requests:
          title: Data Requests
          type: array
          items:
            type: string
          description: Requested pod names.
          default: []
        roles_required:
          title: Roles Required
          type: array
          items:
            type: string
          description: Roles required to view this pod.
          default: []
        status_requested:
          title: Status Requested
          type: string
          description: 'Status requested by user, ON or OFF.'
          default: 'ON'
        volume_mounts:
          title: Volume Mounts
          type: object
          additionalProperties:
            $ref: '#/components/schemas/VolumeMount'
          description: >-
            Key: Volume name. Value: List of strs specifying volume
            folders/files to mount in pod
          default: {}
        time_to_stop_default:
          title: Time To Stop Default
          type: integer
          description: >-
            Default time (sec) for pod to run from instance start. -1 for
            unlimited. 12 hour default.
          default: 43200
        time_to_stop_instance:
          title: Time To Stop Instance
          type: integer
          description: >-
            Time (sec) for pod to run from instance start. Reset each time
            instance is started. -1 for unlimited. None uses default.
        networking:
          title: Networking
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Networking'
          description: >-
            Networking information. {'url_suffix': {'protocol': 'http'  'tcp',
            'port': int}/}
          default:
            default:
              protocol: http
              port: 5000
        resources:
          title: Resources
          allOf:
            - $ref: '#/components/schemas/Resources'
          description: Pod resource management
          default: {}
      additionalProperties: false
      description: Object with fields that users are allowed to specify for the Pod class.
    UpdateSnapshot:
      title: UpdateSnapshot
      type: object
      properties:
        description:
          title: Description
          type: string
          description: Description of this snapshot.
          default: ''
        size_limit:
          title: Size Limit
          type: integer
          description: >-
            Size in MB to limit snapshot to. We'll start warning if you've gone
            past the limit.
          default: 1024
        cron:
          title: Cron
          type: string
          description: cron bits
          default: ''
        retention_policy:
          title: Retention Policy
          type: string
          description: retention_policy bits
          default: ''
      additionalProperties: false
      description: >-
        Object with fields that users are allowed to specify when updating the
        Snapshot class.
    UpdateVolume:
      title: UpdateVolume
      type: object
      properties:
        description:
          title: Description
          type: string
          description: Description of this volume.
          default: ''
        size_limit:
          title: Size Limit
          type: integer
          description: >-
            Size in MB to limit volume to. We'll start warning if you've gone
            past the limit.
          default: 1024
      additionalProperties: false
      description: >-
        Object with fields that users are allowed to specify when updating the
        Volume class.
    ValidationError:
      title: ValidationError
      required:
        - loc
        - msg
        - type
      type: object
      properties:
        loc:
          title: Location
          type: array
          items:
            anyOf:
              - type: string
              - type: integer
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
    VolumeMount:
      title: VolumeMount
      type: object
      properties:
        type:
          title: Type
          type: string
          description: Type of volume to attach.
          default: ''
        mount_path:
          title: Mount Path
          type: string
          description: Path to mount volume to.
          default: /tapis_volume_mount
        sub_path:
          title: Sub Path
          type: string
          description: Path to mount volume to.
          default: ''
      additionalProperties: false
    VolumePermissionsResponse:
      title: VolumePermissionsResponse
      required:
        - message
        - metadata
        - result
        - status
        - version
      type: object
      properties:
        message:
          title: Message
          type: string
        metadata:
          title: Metadata
          type: object
        result:
          $ref: '#/components/schemas/PermissionsModel'
        status:
          title: Status
          type: string
        version:
          title: Version
          type: string
      additionalProperties: false
    VolumeResponse:
      title: VolumeResponse
      required:
        - message
        - metadata
        - result
        - status
        - version
      type: object
      properties:
        message:
          title: Message
          type: string
        metadata:
          title: Metadata
          type: object
        result:
          $ref: '#/components/schemas/VolumeResponseModel'
        status:
          title: Status
          type: string
        version:
          title: Version
          type: string
      additionalProperties: false
    VolumeResponseModel:
      title: VolumeResponseModel
      required:
        - volume_id
      type: object
      properties:
        volume_id:
          title: Volume Id
          type: string
          description: Name of this volume.
        description:
          title: Description
          type: string
          description: Description of this volume.
          default: ''
        size_limit:
          title: Size Limit
          type: integer
          description: >-
            Size in MB to limit volume to. We'll start warning if you've gone
            past the limit.
          default: 1024
        size:
          title: Size
          type: integer
          description: Size of volume currently in MB
          default: 0
        status:
          title: Status
          type: string
          description: Current status of volume.
          default: REQUESTED
        creation_ts:
          title: Creation Ts
          type: string
          description: Time (UTC) that this volume was created.
          format: date-time
        update_ts:
          title: Update Ts
          type: string
          description: Time (UTC) that this volume was updated.
          format: date-time
      additionalProperties: false
      description: Response object for Volume class.
    VolumesResponse:
      title: VolumesResponse
      required:
        - message
        - metadata
        - result
        - status
        - version
      type: object
      properties:
        message:
          title: Message
          type: string
        metadata:
          title: Metadata
          type: object
        result:
          title: Result
          type: array
          items:
            $ref: '#/components/schemas/VolumeResponseModel'
        status:
          title: Status
          type: string
        version:
          title: Version
          type: string
      additionalProperties: false
tags:
  - name: Pods
    description: Create and command pods.
  - name: Credentials
    description: Manage pod's credentials used.
  - name: Logs
    description: Manage pod logs.
  - name: Permissions
    description: >-
      Manage pod permissions. Grant specific TACC users **READ**, **USER**, and
      **ADMIN** level permissions.
  - name: Volumes
    description: Create and manage volumes.
  - name: Snapshots
    description: Create and manage snapshots.
